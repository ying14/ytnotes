.libPaths
.libPaths()
library(yingtools2)
library(tidyverse)
.libPaths() %>% copy.as.Rcode()
setwd("C:/Users/Ying/Desktop/samples/ana samples")
csv <- read_csv("AGtest.samps.csv")
load("human_microbiota_dada2.RData")
csv$Sample_ID
csv$Pilot
samps <- csv %>% filter(Pilot=="yes")
csv %>% count(Pilot)
samps$Sample_ID
samp$Sample_ID
samp %>% glimpse
samps$Sample_ID
samps$Sample_ID
csv.samps <- csv %>% filter(Pilot=="yes")
samp$Sample_ID
samp$Sample_ID
rm(samps)
s <- get.samp(phy.dada2)
csv.samps$Sample_ID %in% s$Sample_ID
csv.samps$Sample_ID
csv.samps$Sample_ID
s <- get.samp(phy.dada2) %>% filter(Sample_ID %in% csv.samps$Sample_ID)
s
s$sample
phy <- prune_samples(s$sample,phy.dada2)
phy <- prune_samples(s$sample,phy.dada2) %>% prune_unused_taxa()
phy
phy
write_rds(phy,file="ana_pilot_samples_25.rds")
phy <- read_rds("ana_pilot_samples_25.rds")
library(yingtools2)
library(tidyverse)
phy <- read_rds("ana_pilot_samples_25.rds")
rm(list=ls())
phy <- read_rds("ana_pilot_samples_25.rds")
otu <- get.otu.melt(phy)
ggplot(otu,aes(x=sample,y=pctseqs))
otu
otu$sample
ggplot(otu,aes(x=sample,y=pctseqs))
ggplot(otu,aes(x=sample,y=pctseqs,fill=Species))
otu
otu$pctseqs
ggplot(otu,aes(x=sample,y=pctseqs,fill=Species))
ggplot(otu,aes(x=sample,y=pctseqs,fill=Species)) +
geom_col(show.legend=FALSE)
ggplot(otu,aes(x=sample,y=pctseqs,fill=Species)) +
geom_taxonomy()
ggplot(otu,aes(x=sample,y=pctseqs,fill=Species,label=Species)) +
geom_taxonomy()
ggplot(otu,aes(x=Sample_ID,y=pctseqs,fill=Species,label=Species)) +
geom_taxonomy()
ggplot(otu,aes(x=Sample_ID,y=pctseqs,fill=otu,label=Species)) +
geom_taxonomy()
ggplot(otu,aes(x=Sample_ID,y=numseqs,fill=otu,label=Species)) +
geom_taxonomy()
ggplot(otu,aes(x=Sample_ID,y=numseqs,fill=otu,label=Species)) +
geom_taxonomy() +
scale_y_continuous(trans=log_epsilon_trans(1000))
ggplot(otu,aes(x=Sample_ID,y=pctseqs,fill=otu,label=Species)) +
geom_taxonomy() +
theme(axis.text.x=element_text(angle=90))
ggplot(otu,aes(x=Sample_ID,y=numseqs,fill=otu,label=Species)) +
geom_taxonomy() +
scale_y_continuous(trans=log_epsilon_trans(1000)) +
theme(axis.text.x=element_text(angle=90))
ggplot(otu,aes(x=Sample_ID,y=pctseqs,fill=otu,label=Species)) +
geom_taxonomy() +
theme(axis.text.x=element_text(angle=90))
g.stack <- ggplot(otu,aes(x=Sample_ID,y=pctseqs,fill=otu,label=Species)) +
geom_taxonomy() +
theme(axis.text.x=element_text(angle=90))
g.pct <- ggplot(otu,aes(x=Sample_ID,y=pctseqs,fill=otu,label=Species)) +
geom_taxonomy() +
theme(axis.text.x=element_text(angle=90))
g.num <- ggplot(otu,aes(x=Sample_ID,y=numseqs,fill=otu,label=Species)) +
geom_taxonomy() +
scale_y_continuous(trans=log_epsilon_trans(1000)) +
theme(axis.text.x=element_text(angle=90))
g.pct <- ggplot(otu,aes(x=Sample_ID,y=pctseqs,fill=otu,label=Species)) +
geom_taxonomy() +
theme(axis.text.x=element_text(angle=90))
g.pct
g.num <- ggplot(otu,aes(x=Sample_ID,y=numseqs,fill=otu,label=Species)) +
geom_taxonomy() +
scale_y_continuous(trans=log_epsilon_trans(1000)) +
theme(axis.text.x=element_text(angle=90))
g.num
dist <- distance(phy,"horn")
dist
hc <- hclust(dist)
lim <- range(hc$order) + c(-0.5,0.5)
tr <- as.phylo(hc)
gt <- ggtree(tr) + coord_flip(ylim=lim,expand=FALSE) + scale_x_reverse()
gt
library(ggtree)
dist <- distance(phy,"horn")
hc <- hclust(dist)
lim <- range(hc$order) + c(-0.5,0.5)
tr <- as.phylo(hc)
library(ape)
tr <- as.phylo(hc)
gt <- ggtree(tr) + coord_flip(ylim=lim,expand=FALSE) + scale_x_reverse()
gt
ggplot(otu2,aes(x=sample,y=pctseqs,fill=Species)) +
geom_taxonomy()
otu2 <- phy.sub %>% get.otu.melt() %>%
mutate(sample=factor(sample,levels=hc$labels[hc$order]))
ggplot(otu2,aes(x=sample,y=pctseqs,fill=Species)) +
geom_taxonomy()
otu2 <- phy %>% get.otu.melt() %>%
mutate(sample=factor(sample,levels=hc$labels[hc$order]))
ggplot(otu2,aes(x=sample,y=pctseqs,fill=Species)) +
geom_taxonomy()
ggplot(otu2,aes(x=sample,y=pctseqs,fill=Species,label=Species)) +
geom_taxonomy()
ggplot(otu2,aes(x=sample,y=pctseqs,fill=otu,label=Species)) +
geom_taxonomy()
ggplot(otu2,aes(x=sample,y=pctseqs,fill=otu,label=Species)) +
geom_taxonomy() +
coord_cartesian(xlim=lim,expand=FALSE)
dist <- distance(phy,"horn")
hc <- hclust(dist)
lim <- range(hc$order) + c(-0.5,0.5)
tr <- as.phylo(hc)
gt <- ggtree(tr) + coord_flip(ylim=lim,expand=FALSE) + scale_x_reverse()
otu2 <- phy %>% get.otu.melt() %>%
mutate(sample=factor(sample,levels=hc$labels[hc$order]))
g.tax <- ggplot(otu2,aes(x=sample,y=pctseqs,fill=otu,label=Species)) +
geom_taxonomy() +
coord_cartesian(xlim=lim,expand=FALSE)
gt
library(patchwork)
gt / g.tax
gg.stack(gt,g.tax)
gg.stack(gt,g.tax,heights=c(1,2))
ggplot(otu,aes(x=Sample_ID,y=pctseqs,fill=otu,label=Species)) +
geom_taxonomy() +
theme(axis.text.x=element_text(angle=90))
ggplot(otu,aes(x=Sample_ID,y=numseqs,fill=otu,label=Species)) +
geom_taxonomy() +
scale_y_continuous(trans=log_epsilon_trans(1000)) +
theme(axis.text.x=element_text(angle=90))
dist <- distance(phy,"horn")
hc <- hclust(dist)
lim <- range(hc$order) + c(-0.5,0.5)
tr <- as.phylo(hc)
gt <- ggtree(tr) + coord_flip(ylim=lim,expand=FALSE) + scale_x_reverse()
otu2 <- phy %>% get.otu.melt() %>%
mutate(sample=factor(sample,levels=hc$labels[hc$order]))
g.tax <- ggplot(otu2,aes(x=sample,y=pctseqs,fill=otu,label=Species)) +
geom_taxonomy() +
coord_cartesian(xlim=lim,expand=FALSE)
gg.stack(gt,g.tax,heights=c(1,2))
g.tax <- ggplot(otu2,aes(x=sample,y=pctseqs,fill=otu,label=Species)) +
geom_taxonomy() +
coord_cartesian(xlim=lim,expand=FALSE) +
theme(axis.text.x=element_text(angle=90))
gg.stack(gt,g.tax,heights=c(1,2))
dist <- get.distance("taxhorn")
dist <- calc.distance(phy,"taxhorn")
hc <- hclust(dist)
lim <- range(hc$order) + c(-0.5,0.5)
tr <- as.phylo(hc)
gt <- ggtree(tr) + coord_flip(ylim=lim,expand=FALSE) + scale_x_reverse()
otu2 <- phy %>% get.otu.melt() %>%
mutate(sample=factor(sample,levels=hc$labels[hc$order]))
g.tax <- ggplot(otu2,aes(x=sample,y=pctseqs,fill=otu,label=Species)) +
geom_taxonomy() +
coord_cartesian(xlim=lim,expand=FALSE) +
theme(axis.text.x=element_text(angle=90))
gg.stack(gt,g.tax,heights=c(1,2))
library(yingtools2)
library(tidyverse)
library(ggtree)
library(ape)
rm(list=ls())
phy <- read_rds("ana_pilot_samples_25.rds")
otu <- get.otu.melt(phy)
ggplot(otu,aes(x=Sample_ID,y=pctseqs,fill=otu,label=Species)) +
geom_taxonomy() +
theme(axis.text.x=element_text(angle=90))
ggplot(otu,aes(x=Sample_ID,y=numseqs,fill=otu,label=Species)) +
geom_taxonomy() +
scale_y_continuous(trans=log_epsilon_trans(1000)) +
theme(axis.text.x=element_text(angle=90))
dist <- calc.distance(phy,"taxhorn")
hc <- hclust(dist)
lim <- range(hc$order) + c(-0.5,0.5)
tr <- as.phylo(hc)
gt <- ggtree(tr) + coord_flip(ylim=lim,expand=FALSE) + scale_x_reverse()
otu2 <- phy %>% get.otu.melt() %>%
mutate(sample=factor(sample,levels=hc$labels[hc$order]))
g.tax <- ggplot(otu2,aes(x=sample,y=pctseqs,fill=otu,label=Species)) +
geom_taxonomy() +
coord_cartesian(xlim=lim,expand=FALSE) +
theme(axis.text.x=element_text(angle=90))
gg.stack(gt,g.tax,heights=c(1,2))
phy
setwd("C:/Users/Ying/Desktop/samples/ana samples")
load("human_microbiota_dada2.RData")
csv <- read_csv("AGtest.samps.csv")
csv.samps <- csv %>% filter(Pilot=="yes")
csv.samps$Sample_ID %in% s$Sample_ID
phy <- prune_samples(s$sample,phy.dada2)
phy
library(ade4)
library(vegan)
1 + 1
Sys.getenv("QUARTO_R")
usethis::edit_r_environ()
## term def
![](stamp1a.jpg){top=1in,left=1in}
file <- "kaiju_summary.tsv"
cols <- list(
"outfile"=col_character(),
"percent"=col_double(),
"numseqs"=col_integer(),
"taxid"=col_character(),
"taxon_name"=col_skip()
)
library(tidyverse)
diamonds
band_members
band_instruments
reticulate::repl_python()
import polars as pl
diamonds_polars = pl.from_pandas(r.diamonds)
band_members_polars = pl.from_pandas(r.band_members)
band_instruments_polars = pl.from_pandas(r.band_instruments)
quit
tibble(
id=1:3,
color=c("blue","red","green"),
size=c("small","medium","large")
)
reticulate::repl_python()
pl.DataFrame(
{
'id': [1, 2, 3],
'color': ['blue', 'red', 'green'],
'size': ['small', 'medium', 'large']
}
).to_pandas()
quit
file <- "kaiju_summary.tsv"
cols <- list(
"outfile"=col_character(),
"percent"=col_double(),
"numseqs"=col_integer(),
"taxid"=col_character(),
"taxon_name"=col_skip()
)
table <- read_tsv(file,
skip=1,
col_names=names(cols),
col_types=cols,
na=c("", "NA"))
reticulate::repl_python()
cols = {
'outfile':pl.Utf8,
'percent':pl.Float64,
'numseqs':pl.Int64,
'taxid':pl.Utf8,
'taxon_name':None
}
# read_csv method:
columns = [i for i,v in enumerate(cols.values()) if v is not None]
new_columns = [k for k,v in cols.items() if v is not None]
dtypes = {k:v for k,v in cols.items() if v is not None}
table = pl.read_csv(r.file,
skip_rows=1,
separator='\t',
has_header=False,
null_values=['','NA'],
columns=columns,
new_columns=new_columns,
dtypes=dtypes)
quit
table
reticulate::repl_python()
table
table
table.to_pandas()
table
dtypes=dtypes).to_pandas()
table
quit
py$table
py$table
table
reticulate::repl_python()
r.table
table
type(r.table)
type(table)
columns = [i for i,v in enumerate(cols.values()) if v is not None]
new_columns = [k for k,v in cols.items() if v is not None]
dtypes = {k:v for k,v in cols.items() if v is not None}
table = pl.read_csv(r.file,
skip_rows=1,
separator='\t',
has_header=False,
null_values=['','NA'],
columns=columns,
new_columns=new_columns,
dtypes=dtypes).to_pandas()
type(table)
r.table)
r.table
table
quit
ls()
py
library(reticulate)
py
py$table
table
py$table
table2 <- py$table
compare(table,table2)
library(yingtools2)
library(yingtools2)
ibrary(yingtools2)
library(yingtools2)
compare(table,table2)
table
py$table
table %>% glimpse
py$table %>% glimpse
table %>% glimpse
table <- table %>% arrange(outfile)
table2 <- py$table %>% arrange(outfile)
compare(table,table2)
table %>% glimpse
py$table %>% glimpse
table <- read_tsv(file)
table <- read_tsv(file)
file <- "kaiju_summary.tsv"
table <- read_tsv(file)
rm(table,table2)
table <- read_tsv(file)
table
reticulate::repl_python()
table = pl.read_csv(r.file,separator='\t')
quit
library(yingtools2)
StatTaxonomy
StatTaxonomy$setup_data
StatTaxonomy$compute_layer
StatTaxonomy$compute_group
StatTaxonomy$compute_panel
otu <- cid.phy %>%
get.otu.melt() %>%
filter(Patient_ID=="179")
# by sample
ggplot(data=otu,aes(x=sample,y=pctseqs,fill=otu,label=Genus)) +
geom_taxonomy()
# by sample
ggplot(data=otu,aes(x=sample,y=numseqs,fill=otu,label=Genus)) +
geom_taxonomy()
# by sample
ggplot(data=otu,aes(x=sample,y=pctseqs,fill=otu,label=Genus)) +
geom_taxonomy() +
log_epsilon_trans(0.001)
# by sample
ggplot(data=otu,aes(x=sample,y=pctseqs,fill=otu,label=Genus)) +
geom_taxonomy() +
scale_y_continuous(trans=log_epsilon_trans(0.001))
# by sample
ggplot(data=otu,aes(x=sample,y=numseqs,fill=otu,label=Genus)) +
geom_taxonomy() +
scale_y_continuous(trans=log_epsilon_trans(100))
# by sample
ggplot(data=otu,aes(x=sample,y=numseqs,fill=otu,label=Genus)) +
geom_col() +
scale_y_continuous(trans=log_epsilon_trans(100))
# by sample
ggplot(data=otu,aes(x=sample,y=numseqs,fill=otu,label=Genus)) +
geom_col(show.legend = FALSE) +
scale_y_continuous(trans=log_epsilon_trans(100))
library(tidyverse)
diamonds
band_members
band_instruments
reticulate::repl_python()
import polars as pl
diamonds_polars = pl.from_pandas(r.diamonds)
band_members_polars = pl.from_pandas(r.band_members)
band_instruments_polars = pl.from_pandas(r.band_instruments)
quit
tibble(
id=1:3,
color=c("blue","red","green"),
size=c("small","medium","large")
)
reticulate::repl_python()
pl.DataFrame(
{
'id': [1, 2, 3],
'color': ['blue', 'red', 'green'],
'size': ['small', 'medium', 'large']
}
).to_pandas()
quit
table <- read_tsv(file,na=c("","NA"))
file <- "kaiju_summary.tsv"
table <- read_tsv(file,na=c("","NA"))
file <- "kaiju_summary.tsv"
table <- read_tsv(file,na=c("","NA"))
file <- "kaiju_summary.tsv"
table <- read_tsv(file,col_names=TRUE,na=c("","NA"))
file <- "kaiju.tsv"
table <- read_tsv(file,col_names=TRUE)
file <- "kaiju.out"
table <- read_tsv(file,col_names=TRUE)
table
table <- read_tsv(file,col_names=FALSE)
table %>% glimpse
file <- "kaiju_summary.tsv"
table <- read_tsv(file,na=c("","NA"))
reticulate::repl_python()
table = pl.read_csv(r.file,
separator='\t',
null_values=['','NA'])
quit
table1 <- table %>% arrange(taxid)
table1 <- table %>% arrange(taxid)
table
table1 <- table %>% arrange(file)
table2 <- py$table %>% arrange(file)
library(reticulate)
table1 <- table %>% arrange(file)
table2 <- py$table %>% arrange(file)
py$table
reticulate::repl_python()
table = pl.read_csv(r.file, separator='\t').to_pandas()
quit
table1 <- table %>% arrange(file)
table2 <- py$table %>% arrange(file)
reticulate::repl_python()
table = pl.read_csv(r.file, separator='\t').to_pandas()
quit
file <- "kaiju.out"
table <- read_tsv(file,col_names=)
reticulate::repl_python()
table = pl.read_csv(r.file, separator='\t').to_pandas()
quit
library(reticulate)
table1 <- table %>% arrange(file)
table2 <- py$table %>% arrange(file)
all.equal(table1,table2)
table1
table1 %>% glimpse
file <- "kaiju_summary.tsv"
table <- read_tsv(file,na=c("","NA"))
reticulate::repl_python()
table = pl.read_csv(r.file,
separator='\t',
null_values=['','NA'])
quit
library(reticulate)
table1 <- table %>% arrange(file)
table2 <- py$table %>% arrange(file)
reticulate::repl_python()
table = pl.read_csv(r.file,
separator='\t',
null_values=['','NA']).to_pandas()
`
quit
table1 <- table %>% arrange(file)
table2 <- py$table %>% arrange(file)
all.equal(table1,table2)
table1 %>% glimpse()
table2 %>% glimpse()
table1
table2 %>% glimpse()
table1$file
table1$file==table2$file
tab(table1$file==table2$file)
library(yingtools21)
library(yingtools2)
tab(table1$file==table2$file)
table1
tab(table1$percent==table2$percent)
table1
compare(table1,table2)
table1[999,]
xx <- full_join(table1,table2,by="file")
table1
table1 <- table %>% arrange(taxon_id)
table2 <- py$table %>% arrange(taxon_id)
table1 %>% glimpse()
table2 %>% glimpse()
compare(table1,table2)
table1 <- table %>% arrange(taxon_id)
table2 <- py$table %>% arrange(taxon_id)
table1 %>% glimpse()
table2 %>% glimpse()
all.equal(table1,table2)
compare(table1,table2,by="taxon_Id")
compare(table1,table2,by="taxon_id")
xx <- compare(table1,table2,by="taxon_id")
table1$taxon_id
all.equal(table1,table2)
xx$.status
tab(xx$.status)
xx %>% filter(is.na(.status))
