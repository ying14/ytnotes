---
format: pdf
keep-md: true
keep-tex: true
keep-yaml: true
editor: source
# number-sections: true
execute: 
  echo: false
  warning: false
geometry: margin=.5in #nothing in margin
mainfont: Arial # NIH should be >=11pt, Arial, Georgia, Helvetica, or Palatino Linotype
fontsize: 11pt
# linestretch: 1.5
indent: true
subparagraph: true
# pagenumbering: 
# install latex-environment with: quarto install extension quarto-ext/latex-environment
filters:
  - latex-environment
environments: [wrapfigure]
# commands: [wrapfigx]
header-includes:
  - \usepackage{wrapfig}    #to be able to wrap text around figures
  - \usepackage{graphicx}
bibliography: references.bib
csl: nature.csl
---

```{r}
#| eval: false
shell.exec("research-strategy.pdf")
```


```{r}
library(tidyverse)
library(yingtools2)
library(knitr)
library(xtable)

# wrapfigure is a latex extension. In latex, it looks like this:
# \begin{wrapfigure}[lineheight]{position}{width}
# ....
# \end{wrapfigure}
# position can be r, l, R, L
# width can be 0.4\linewidth
defOut <- knitr::knit_hooks$get("plot")
knitr::knit_hooks$set(plot = function(x, options) {  # set new plot hook ...
  if(!is.null(options$wrapfigure)) {  # then, if option wrapfigure is given ...
    # create the new opening string for the wrapfigure environment ...
    position <- options$wrapfigure[[1]]
    width <- options$wrapfigure[[2]]
    x.latex <- knitr:::hook_plot_tex(x, options)
    latex.header <- paste0("\\begin{wrapfigure}{",position,"}{",width,"}")
    x.latex.mod <- x.latex %>% 
      str_replace(fixed("\\begin{figure}"),latex.header) %>%
      str_replace(fixed("\\end{figure}"),"\\end{wrapfigure}")
    return(x.latex.mod)
  } else {
    return(defOut(x,options))  
  }
})
```

## Quarto

Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.

## Running Code

When you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:

```{r}
1 + 1
```

You can add options to executable code like this

```{r}
#| echo: false
2 * 2
```

The `echo: false` option disables the printing of code (only output is displayed).

`r paste(stringi::stri_rand_lipsum(1, start_lipsum = FALSE), collapse = "\n\n")`

```{r wrapfigure = list("R", "4in")}

#| label: fig-scatterwrap
#| fig.cap: Important scatterplot of miles per gallon (mpg) and horsepower (hp).
ggplot(mtcars,aes(x=mpg,y=hp)) + geom_point()

```
